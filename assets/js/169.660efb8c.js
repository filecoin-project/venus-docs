(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{551:function(t,e,a){"use strict";a.r(e);var _=a(17),v=Object(_.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"fip45-de-couple-verifyed-registry-from-markets-解读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fip45-de-couple-verifyed-registry-from-markets-解读"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0045.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("FIP45"),a("OutboundLink")],1),t._v(": De-couple verifyed registry from markets 解读")]),t._v(" "),a("h2",{attrs:{id:"前置概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前置概念"}},[t._v("#")]),t._v(" 前置概念")]),t._v(" "),a("ul",[a("li",[t._v("FIL+: 此概念在"),a("a",{attrs:{href:"https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0003.md",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("FIP-0003")]),a("OutboundLink")],1),t._v("中提出.包含 2 个角色:")]),t._v(" "),a("li",[a("code",[t._v("FIL+ clients")]),t._v(":(之前叫: "),a("code",[t._v("Verified clients")]),t._v("), 从"),a("code",[t._v("Fil+Notaries")]),t._v("处申请"),a("code",[t._v("DataCap")]),t._v("的配额, 并将这一部分带'data cap'的数据通过存储订单发给"),a("code",[t._v("SP")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("FIL+ Notaries")]),t._v("(之前叫: "),a("code",[t._v("Verifiers")]),t._v("), 按规则将"),a("code",[t._v("DataCap")]),t._v("配额分配给"),a("code",[t._v("FIL+ clients")]),t._v("\n由"),a("code",[t._v("FIL+clients")]),t._v("发出的验证订单, 产生的算力, 是普通数据的 10 倍.")])]),t._v(" "),a("h2",{attrs:{id:"提案概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提案概述"}},[t._v("#")]),t._v(" 提案概述")]),t._v(" "),a("p",[t._v("伴随"),a("code",[t._v("FVM")]),t._v("更开放的可编程性, filecoin 有可能实现延长"),a("code",[t._v("FIL+ data cap")]),t._v("分配期限, 意味着存储验证数据的"),a("code",[t._v("SP")]),t._v("可能不再受"),a("code",[t._v("storage market actor")]),t._v("相关的订单限制,享受更长久的算力和奖励增加.\n此提案, 目的是将 FIL+与"),a("code",[t._v("storage market actor")]),t._v("分离, 抽象出新的"),a("code",[t._v("datacap token")]),t._v(", 相关的业务完全由"),a("code",[t._v("verified registry actor")]),t._v("和"),a("code",[t._v("datacap token")]),t._v("来接替.")]),t._v(" "),a("p",[t._v("提案依赖:"),a("a",{attrs:{href:"https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0034.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("FIP34"),a("OutboundLink")],1),t._v(", [解读](#FIP34 Fix pre-commit deposit independent of sector content 解读)")]),t._v(" "),a("h2",{attrs:{id:"来龙去脉"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#来龙去脉"}},[t._v("#")]),t._v(" 来龙去脉")]),t._v(" "),a("p",[t._v("当前的机制:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("FC("),a("code",[t._v("FIL+ clients")]),t._v(")从 FN("),a("code",[t._v("FIL+ Notaries")]),t._v(")拿到以(byte)为度量单位的 "),a("strong",[t._v("一定大小")]),t._v("的"),a("strong",[t._v("一次性")]),t._v("的"),a("code",[t._v("data cap")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("FC 消耗自己的"),a("code",[t._v("data cap")]),t._v("配额, 在连上激活标"),a("code",[t._v("verified data")]),t._v("的订单. 封装此订单的 secotr 的"),a("code",[t._v("质量")]),t._v("得到提升,奖励增加.")])]),t._v(" "),a("li",[a("p",[t._v("FC 和 FN 通过内置的"),a("code",[t._v("storage market actor")]),t._v("进行交易, 每个订单都会指定一个期限.")])]),t._v(" "),a("li",[a("p",[t._v("每个 sector 都有承诺的有效期(此期限最多可以延长到 5 年), "),a("code",[t._v("storage marekt actor")]),t._v("的实现中限制了任何订单超过 sector 的承诺期限(540 天).")])]),t._v(" "),a("li",[a("p",[t._v("当前的情况是:")]),t._v(" "),a("ul",[a("li",[t._v("即使 secotr 续期了,也没有任何方法对其封装的订单进行续期.")]),t._v(" "),a("li",[t._v("没有相关的机制让一个 deal 从一个 sector 转移到另外一个 sector.")])])])]),t._v(" "),a("p",[t._v("综上:\n每个"),a("code",[t._v("data cap")]),t._v("分配的期限, 事实上绑定到了一个 deal 上, 并间接受限于 sector 的最长期限(5 年). 也就是说, "),a("code",[t._v("FIL+")]),t._v("订单提供的对于"),a("code",[t._v("SP")]),t._v("获取的奖励增加受限于订单期限, 间接的受限于 sector 的最大期限.")]),t._v(" "),a("p",[a("strong",[t._v("扩展阅读")]),t._v(":\n为什么 sector 最大期限设置为 5 年?(书上说是出于"),a("a",{attrs:{href:"https://spec.filecoin.io/algorithms/porep-old/stacked_drg/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SDR PoRep 算法"),a("OutboundLink")],1),t._v("的安全性考虑)")]),t._v(" "),a("h3",{attrs:{id:"从协议上来解耦的思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从协议上来解耦的思路"}},[t._v("#")]),t._v(" 从协议上来解耦的思路")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("通过实现允许"),a("code",[t._v("verified deal")]),t._v("的数据,可以从一个 sector 转移到过期时间更久的 sector 上,来解决以上两个问题.")])]),t._v(" "),a("li",[a("p",[t._v("伴随"),a("a",{attrs:{href:"https://github.com/filecoin-project/FIPs/discussions/298",target:"_blank",rel:"noopener noreferrer"}},[t._v("FVM 架构调整"),a("OutboundLink")],1),t._v(", "),a("code",[t._v("fvm")]),t._v("提供更加开放的可编程性, 开发者可以开发一种自己的"),a("code",[t._v("storage market")]),t._v("替代内置的.\n"),a("code",[t._v("data cap")]),t._v("数据不应该被内置的"),a("code",[t._v("storage market")]),t._v("独享, 所以需要从内置"),a("code",[t._v("market")]),t._v("中将此部分业务抽象成独立的"),a("code",[t._v("datacap token")])])])]),t._v(" "),a("h3",{attrs:{id:"预期功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预期功能"}},[t._v("#")]),t._v(" 预期功能")]),t._v(" "),a("ul",[a("li",[t._v("带'data cap'数据配额的分配将和数据本身以及"),a("code",[t._v("SP")]),t._v("相关, 而不是订单.")]),t._v(" "),a("li",[t._v("带'data cap'数据有一个与 sector 的承诺期限无关的期限的周期区间.")]),t._v(" "),a("li",[a("code",[t._v("SP")]),t._v("只需要在一个生命周期大于"),a("code",[t._v("verified data")]),t._v("最小生命周期, 小于或等于其最大周期的 sector 中证明了其存储就可以立刻得到增强算力和奖励.\n当 sector 过期后,"),a("code",[t._v("SP")]),t._v("可以在其新的 sector 中继续承诺这部分数据.一直到"),a("code",[t._v("data cap")]),t._v("过期.")]),t._v(" "),a("li",[t._v("存储客户和"),a("code",[t._v("SP")]),t._v("之间可以不走"),a("code",[t._v("storage market")]),t._v("的订单流程(直接将验证数据"),a("code",[t._v("add piece")]),t._v("到 sector 中?)")]),t._v(" "),a("li",[t._v("公证人可以通过机制控制验证客户发出"),a("code",[t._v("verified data")]),t._v("的最大期限")]),t._v(" "),a("li",[t._v("计算"),a("code",[t._v("QA power")]),t._v("的方法被简化")])]),t._v(" "),a("p",[a("strong",[t._v("思考:")]),t._v("\n为什么 sector 的周期必须小于或等于"),a("code",[t._v("verified data")]),t._v("的最大期限?")]),t._v(" "),a("h2",{attrs:{id:"技术解读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技术解读"}},[t._v("#")]),t._v(" 技术解读")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("builtin-actor")]),t._v("增加"),a("code",[t._v("datacap token")]),t._v(", 关于"),a("code",[t._v("FIL+")]),t._v("相关的业务完全由新增加的"),a("code",[t._v("datacap token")]),t._v("和升级后的"),a("code",[t._v("verified registry actor")]),t._v("来承接.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("miner actor")]),t._v(" 改动:("),a("strong",[t._v("疑惑")]),t._v(":"),a("a",{attrs:{href:"https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0045.md#simplified-quality-adjusted-power",target:"_blank",rel:"noopener noreferrer"}},[t._v("fip"),a("OutboundLink")],1),t._v("中的描述和"),a("a",{attrs:{href:"https://github.com/filecoin-project/builtin-actors/blob/cf557e82939844ee8e1d5839bb7f2cbdd50e58ae/actors/miner/src/lib.rs#L3799-L3801",target:"_blank",rel:"noopener noreferrer"}},[t._v("实现"),a("OutboundLink")],1),t._v("没对上, 尚待完成?)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("QA power")]),t._v("计算变化为: "),a("code",[t._v("SectorSize + (9 * VerifedDealWeight)")])]),t._v(" "),a("li",[a("code",[t._v("DealWeight")]),t._v(" 和 "),a("code",[t._v("VerifiedDealWeight")]),t._v("的直接等于"),a("code",[t._v("SectorSize")])])])]),t._v(" "),a("li",[a("p",[t._v("接发单流程变化:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("通过"),a("code",[t._v("storage market actor")]),t._v("代理,继续沿用"),a("code",[t._v("vn16")]),t._v("中的的发单流程.\n本来新的"),a("code",[t._v("FIL+")]),t._v("业务已经和它分离了,看起来和它不会再有任何关系, 但为了与当前的"),a("code",[t._v("client-market-provider")]),t._v("的工作模式保持一致.\n所以,依然将 "),a("code",[t._v("storage market actor")]),t._v("作为中间的撮合层, 在其中完成了复杂的相关业务逻辑,外部看起来流程和之前保持一致. "),a("a",{attrs:{href:"https://github.com/filecoin-project/FIPs/blob/master/FIPS/fip-0045.md#built-in-storage-market-as-a-delegate",target:"_blank",rel:"noopener noreferrer"}},[t._v("流程描述"),a("OutboundLink")],1),t._v("大致如下:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("1. `FIL+ clients`调用`stroage markets actor`发布订单, 设置订单参数`DealProposal.verified_deal`为`true`.\n2. `market actor`的`publish_storage_deal`内部, 如果订单`verified_deal`为true, 则调用`data cap token`的`Transfer`, 最终会在`verified registry actor`中创建一条`Allocation`的记录, 表示`data cap`配额已经分配给了`picee cid`代表的数据.\n    `Allocation`有一个`life span`, 最小90天, 最大5年. 但在**实际**中,这个值会被自动按如下的逻辑进行设置.\n")])])]),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MINIMUM_VERIFIED_ALLOCATION_TERM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("i64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("180")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EPOCHS_IN_DAY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAXIMUM_VERIFIED_ALLOCATION_TERM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("i64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EPOCHS_IN_YEAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAXIMUM_VERIFIED_ALLOCATION_EXPIRATION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("i64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EPOCHS_IN_DAY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pub")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MARKET_DEFAULT_ALLOCATION_TERM_BUFFER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("i64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EPOCHS_IN_DAY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" alloc_term_min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" deal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proposal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("end_epoch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" deal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proposal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start_epoch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" alloc_term_max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" alloc_term_min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" policy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("market_default_allocation_term_buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" policy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maximum_verified_allocation_term"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" alloc_expiration "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proposal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start_epoch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" curr_epoch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" policy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maximum_verified_allocation_expiration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[a("code",[t._v("SP")]),t._v("开始封装扇区, 在第一次"),a("code",[t._v("WinPoST")]),t._v("(如果是"),a("code",[t._v("snapup")]),t._v("只需要在"),a("code",[t._v("replica-update")]),t._v(")时, 就会在"),a("code",[t._v("verifyied rregistry actor")]),t._v("中创建一条"),a("code",[t._v("Claim,")]),t._v("记录"),a("code",[t._v("Allocation")]),t._v("被"),a("code",[t._v("SP")]),t._v("的某个扇区获取, "),a("code",[t._v("SP")]),t._v("获得"),a("code",[t._v("data cap")]),t._v("带来的算力增益效果.")])])]),t._v(" "),a("li",[a("p",[t._v("绕过"),a("code",[t._v("stroage market actor")]),t._v("使用新的发单流程(需待"),a("a",{attrs:{href:"https://github.com/filecoin-project/FIPs/discussions/298",target:"_blank",rel:"noopener noreferrer"}},[t._v("架构调整"),a("OutboundLink")],1),t._v("完成后), 在新的方案中, 对于扇区封装的"),a("code",[t._v("Piece")]),t._v("定义为:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" PieceManifest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Each piece may specify a FIL+ verified data cap allocation ID.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the piece is a sub-piece of a larger allocation, also specifies")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the range covered and an inclusion proof in the allocation.")]),t._v("\n        VerifiedDataAllocationID "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Optional")]),t._v("\n        VerifiedDataRangeStart   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("\n        VerifiedDataRangeEnd     "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("和"),a("code",[t._v("Allocation")]),t._v("建立了直接的关联, 所以,在计算sector获取的增强算力得以不再依赖"),a("code",[t._v("storage market")]),t._v("的deal. 新的流程大致如下:")]),t._v(" "),a("ol",[a("li",[t._v("Allocation，即发单，可以选择这个订单时长的一个区间。最短6个月，最长5年")]),t._v(" "),a("li",[t._v("发单之日和发单中定义的SP完成封装的时间，不得大于60天")]),t._v(" "),a("li",[t._v("一旦发单，"),a("code",[t._v("client")]),t._v("持有的"),a("code",[t._v("datacap token")]),t._v("会被转至一个"),a("code",[t._v("verified registry")])]),t._v(" "),a("li",[t._v("当SP没有能够在"),a("code",[t._v("client")]),t._v("规定的高度前完成订单封装，"),a("code",[t._v("datacap token")]),t._v("会返还给"),a("code",[t._v("client")]),t._v("，即接单失败")]),t._v(" "),a("li",[t._v("原有的f+治理的方式之一，移除"),a("code",[t._v("client")]),t._v("地址上的"),a("code",[t._v("datacap")]),t._v("功能，现变为能够实现把"),a("code",[t._v("client")]),t._v("地址持有的"),a("code",[t._v("datacap token")]),t._v("给烧掉")]),t._v(" "),a("li",[t._v("当一个"),a("code",[t._v("SP")]),t._v("成功接单之后，一个"),a("code",[t._v("allocation")]),t._v("就转变为SP的一个"),a("code",[t._v("claim")]),t._v("；"),a("code",[t._v("verified registry")]),t._v("中保管的"),a("code",[t._v("datacap token")]),t._v("也因接单成功后，直接燃烧掉")]),t._v(" "),a("li",[t._v("当一个SP的订单到期之后，"),a("code",[t._v("claim")]),t._v("被移除")]),t._v(" "),a("li",[t._v("SP可以延长"),a("code",[t._v("claim")]),t._v("，即延长订单，但不能超过发单时定义的订单最长生命")]),t._v(" "),a("li",[t._v("同时，一个"),a("code",[t._v("client")]),t._v("可以花费"),a("code",[t._v("datacap token")]),t._v("给一个订单续期，但是订单生命周期最长不能超过5年")])])])])]),t._v(" "),a("li",[a("p",[t._v("扇区"),a("a",{attrs:{href:"https://github.com/filecoin-project/lotus/pull/9412",target:"_blank",rel:"noopener noreferrer"}},[t._v("封装逻辑发生变化"),a("OutboundLink")],1),t._v("(venus cluster有影响?)")])]),t._v(" "),a("li",[a("p",[t._v("扇区"),a("a",{attrs:{href:"https://github.com/filecoin-project/lotus/issues/9369",target:"_blank",rel:"noopener noreferrer"}},[t._v("续期逻辑发生变化"),a("OutboundLink")],1),t._v("(续期工具有影响?)")])]),t._v(" "),a("li",[a("p",[t._v("对于"),a("code",[t._v("venus")]),t._v("来说")]),t._v(" "),a("ul",[a("li",[t._v("除了保证节点正常工作之外, 是否还应该增加相关的 cli 工具?")]),t._v(" "),a("li",[t._v("数据类型的变化带来的影响, 需要关注是否包含某些数据类型的变化，在"),a("code",[t._v("venus-shared")]),t._v("中有于其对应的自定义类型，以及如果存在，可能导致的数据迁移问题等。")])])])]),t._v(" "),a("h2",{attrs:{id:"市场解读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#市场解读"}},[t._v("#")]),t._v(" 市场解读")]),t._v(" "),a("p",[t._v("FIP0045的核心之一是"),a("code",[t._v("datacap token")]),t._v("化。为fvm能够更好的利用"),a("code",[t._v("datacap token")]),t._v("去实现一些用户自定义的场景。同时这给整个接单流程带来了巨大的变化。重点如下.")]),t._v(" "),a("p",[t._v("关于"),a("code",[t._v("datacap token")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("datacap token")]),t._v("最终是形态是要通过 FIP0046，兼容 filcoin 定义的 FRC-0046 标准")]),t._v(" "),a("li",[t._v("当前 nv17 不包含 FIP0046")]),t._v(" "),a("li",[t._v("一个非常，非常重要的点，FRC-0046 支持"),a("code",[t._v("client")]),t._v("把管理"),a("code",[t._v("datacap token")]),t._v("的权限委托给一个代理的功能；代理可以是一个合约；")]),t._v(" "),a("li",[t._v("当"),a("code",[t._v("client")]),t._v("收新的公证人签名的"),a("code",[t._v("datacap token")]),t._v("时，"),a("code",[t._v("datacap token")]),t._v("将被直接"),a("code",[t._v("mint")]),t._v("，铸造出来")])]),t._v(" "),a("p",[t._v("关于质押：")]),t._v(" "),a("ul",[a("li",[t._v("当订单从老扇区被转移到新扇区后，会按当前网络重新计算新扇区的质押；但老扇区质押不变；")])]),t._v(" "),a("p",[t._v("关于迁移/兼容：")]),t._v(" "),a("ul",[a("li",[t._v("当前"),a("code",[t._v("client")]),t._v("地址中的"),a("code",[t._v("datacap")]),t._v("，全部迁移成"),a("code",[t._v("datacap token")])]),t._v(" "),a("li",[a("code",[t._v("datacap")]),t._v("浏览器，玄羚，需要做新的兼容")]),t._v(" "),a("li",[t._v("resnap 暂时还没有支持，即一个 CC 被 snap 一次后，订单过期，不能再被 snap")])]),t._v(" "),a("p",[t._v("SP 激励：")]),t._v(" "),a("ul",[a("li",[t._v("可以预见的网络中的"),a("code",[t._v("client")]),t._v("将发送更多最大时长为 5 年的"),a("code",[t._v("datacap")]),t._v("订单以获取最大利益")]),t._v(" "),a("li",[t._v("SP 倾向 5 年订单，可能导致有实际短期需求的订单得不到存储")]),t._v(" "),a("li",[t._v("可能短期发单"),a("code",[t._v("gas")]),t._v("会提高")])]),t._v(" "),a("p",[t._v("对于生态的考虑:")]),t._v(" "),a("ul",[a("li",[t._v("datacap可被续期的最大值还有待实践中，慢慢斟酌；无限制的话，肯定是不行的")]),t._v(" "),a("li",[t._v("datacap在f+治理自动化和能力提升后，应该进一步充足；网络估计会有很多没有多大用处的数据")]),t._v(" "),a("li",[t._v("由此，datacap会有一定的早期入局红利")])]),t._v(" "),a("p",[a("strong",[a("code",[t._v("FIP45")]),t._v("的影响远不止上述提到的内容, 可以说其对于 filecoin 架构和生态的影响都非常的巨大.其影响会随着时间的推移逐步的体现出来.")])]),t._v(" "),a("p",[a("strong",[t._v("此提案的实现, 为存储市场更加开发的可编程性提供了更广阔的空间. 从软件的角度来说,filecoin 向"),a("code",[t._v("高内聚, 低耦合")]),t._v("更进了迈进了一步.")])])])}),[],!1,null,null,null);e.default=v.exports}}]);
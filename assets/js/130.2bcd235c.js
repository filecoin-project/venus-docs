(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{508:function(e,n,t){"use strict";t.r(n);var a=t(17),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"market-client-配置解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#market-client-配置解释"}},[e._v("#")]),e._v(" Market Client 配置解释")]),e._v(" "),t("p",[e._v("market-client 的一份典型的配置如下")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('\nSimultaneousTransfersForRetrieval = 20\nSimultaneousTransfersForStorage = 20\n\n[DefaultMarketAddress]\n  Addr = "t3qkgm5h7nmusacfggd744w7fdj45rn6iyl7n6s6lr34t4qlfebiphmm3vxtwc4a4acqi4nv3pqk6h7ddqqz5q"\n  Account = ""\n\n[API]\n  ListenAddress = "/ip4/127.0.0.1/tcp/41231/ws"\n  RemoteListenAddress = ""\n  Secret = ""\n  Timeout = "30s"\n\n[Libp2p]\n  ListenAddresses = ["/ip4/0.0.0.0/tcp/34123", "/ip6/::/tcp/0"]\n  AnnounceAddresses = []\n  NoAnnounceAddresses = []\n  PrivateKey = ""\n\n[Node]\n  Url = "/ip4/192.168.200.106/tcp/3453"\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiYWRtaW4iLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.0fylyMSNjp8dkTrCLYkFQSjO9FokDKXrl5dqGpMDaOE"\n\n[Messager]\n  Url = ""\n  Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiYWRtaW4iLCJwZXJtIjoiYWRtaW4iLCJleHQiOiIifQ.0fylyMSNjp8dkTrCLYkFQSjO9FokDKXrl5dqGpMDaOE"\n\n[Signer]\n  Type = ""\n  Url = ""\n  Token = ""\n\n')])])]),t("p",[e._v("其中，可以分成三个部分： client 网络配置，venus 服务组件的配置和 其他配置")]),e._v(" "),t("h2",{attrs:{id:"market-client-网络配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#market-client-网络配置"}},[e._v("#")]),e._v(" Market Client 网络配置")]),e._v(" "),t("p",[e._v("这部分的配置决定了venus client 和外界交互的接口")]),e._v(" "),t("h3",{attrs:{id:"api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[e._v("#")]),e._v(" [API]")]),e._v(" "),t("p",[e._v("market-client 对外提供服务的接口")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[API]\n# market-client 提供服务监听的地址\n# 字符串类型，必选项，默认为:"/ip4/127.0.0.1/tcp/41235"\nListenAddress = "/ip4/127.0.0.1/tcp/41235"\n\n# 保留字段\nRemoteListenAddress = ""\n\n# 密钥用于加密通信\n#字符串类型 可选项（没有则自动生成）\nSecret = "878f9c1f88c6f68ee7be17e5f0848c9312897b5d22ff7d89ca386ed0a583da3c"\n\n#保留字段\nTimeout = "30s"\n')])])]),t("h3",{attrs:{id:"libp2p"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#libp2p"}},[e._v("#")]),e._v(" [Libp2p]")]),e._v(" "),t("p",[e._v("在P2P网络中通信时使用的 通信地址")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[Libp2p]\n# 监听的网络地址\n# 字符串数组 必选 默认为:["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\nListenAddresses = ["/ip4/0.0.0.0/tcp/58418", "/ip6/::/tcp/0"]\n\n# 保留字段\nAnnounceAddresses = []\n\n# 保留字段\nNoAnnounceAddresses = []\n\n# 用于p2p加密通信的私钥\n# 字符串 可选（没设置则自动生成）\nPrivateKey = "08011240ae580daabbe087007d2b4db4e880af10d582215d2272669a94c49c854f36f99c35"\n')])])]),t("h2",{attrs:{id:"venus-组件服务配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#venus-组件服务配置"}},[e._v("#")]),e._v(" venus 组件服务配置")]),e._v(" "),t("p",[e._v("当market-client接入venus组件使用时，需要配置相关组件的API。")]),e._v(" "),t("h3",{attrs:{id:"node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[e._v("#")]),e._v(" [Node]")]),e._v(" "),t("p",[e._v("venus链服务接入配置")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[Node]\n# 链服务的入口\n# 字符串类型 必选（也可以直接通过命令行的--node-url flag 进行配置）\nUrl = "/ip4/192.168.200.128/tcp/3453"\n\n# venus 系列组件的鉴权token\n# 字符串类型 必选（也可以直接通过命令行的 --auth-token flag 进行配置）\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n\n')])])]),t("h3",{attrs:{id:"messager"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#messager"}},[e._v("#")]),e._v(" [Messager]")]),e._v(" "),t("p",[e._v("venus 消息服务接入配置")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[Messager]\n# 消息服务入口\n# 字符串类型 必选（也可以直接通过命令行的 --messager-url flag 进行配置）\nUrl = "/ip4/192.168.200.128/tcp/39812/"\n\n# venus 系列组件的鉴权token\n# 字符串类型 必选（也可以直接通过命令行的 --auth-token flag 进行配置）\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n')])])]),t("h3",{attrs:{id:"signer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#signer"}},[e._v("#")]),e._v(" [Signer]")]),e._v(" "),t("p",[e._v("venus 提供签名服务的组件\n在 market-client 只能使用 wallet 类型的签名服务")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('[Signer]\n# 签名服务组件的类型\n# 字符串类型  只能是"wallet"\nType = "wallet"\n\n# 签名服务入口\n# 字符串类型 必选（也可以直接通过命令行的 --signer-url flag 进行配置）\nUrl = "/ip4/192.168.200.128/tcp/5678/"\n\n# wallet 用于鉴权的token\n# 字符串类型 必选\nToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiZm9yY2VuZXQtbnYxNiIsInBlcm0iOiJhZG1pbiIsImV4dCI6IiJ9.PuzEy1TlAjjNiSUu_tbHi2XPUritDLm9Xf5UW3MHRe8"\n')])])]),t("h2",{attrs:{id:"其他配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他配置"}},[e._v("#")]),e._v(" 其他配置")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# 获取数据订单进行同时传输的最大数量\n# 整数类型 默认：20\nSimultaneousTransfersForRetrieval = 20\n\n# 存储订单同时进行传输的最大数量\n# 整数类型 默认：20\nSimultaneousTransfersForStorage = 20\n\n# 当前market-client的默认地址\n# 字符串类型 可选 （也可以直接通过命令行的 --addr flag 进行配置）\nDefaultMarketAddress = "t3qkgm5h7nmusacfggd744w7fdj45rn6iyl7n6s6lr34t4qlfebiphmm3vxtwc4a4acqi4nv3pqk6h7ddqqz5q:username"\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);